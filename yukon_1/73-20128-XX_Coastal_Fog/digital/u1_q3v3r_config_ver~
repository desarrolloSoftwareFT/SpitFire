!!!!    6    0    1 1643010525  V1faa                                         
!######################################################
! Part Name ir35215
! Cisco PN: xx-xxxxx-xx
! Tester: Agilent 3070
! NOTES: change default device desinator
! TRANSLATED FROM: 17-15549-02_Utopias_QSFPDD.txt
!######################################################

test digital; Pointer(*)
vector cycle 2u
receive delay 1.9u

default device "u1_q3v3r"
assign SDA to pins 9
assign SCL to pins 10

assign PROG_EN to pins 34 default "1"


family LVT

inputs SCL
inputs PROG_EN
bidirectional SDA

!######################################################

vector INIT1
 drive SDA
 set SCL   to "1"
 set SDA   to "1"
end vector

vector KEEP1
 receive SDA
 set SCL   to "k"
 set SDA   to "x"
end vector

vector KEEP2
 drive SDA
 set SCL   to "k"
 set SDA   to "k"
end vector

vector SK_10
 initialize to KEEP1
 set SCL    to "0"
end vector

vector SK_11
 initialize to KEEP1
 set SCL    to "1"
end vector

vector SK_20
 initialize to KEEP2
 set SCL    to "0"
end vector

vector SK_21
 initialize to KEEP2
 set SCL    to "1"
end vector

 vector R_X
 initialize to KEEP1
 set SDA    to "x"
end vector

vector R_0
 initialize to KEEP1
 set SDA    to "0"
end vector

vector R_1
 initialize to KEEP1
 set SDA    to "1"
end vector

vector D_0
 initialize to KEEP2
 set SDA    to "0"
end vector

vector D_1
 initialize to KEEP2
 set SDA    to "1"
end vector

!######################################################

data Write_Pointer to groups SDA
  values Pointer(0:5)
end data

data Read_Pointer to groups SDA
  values Pointer(0:5)
end data

!######################################################

sub STRT
 execute D_1
 execute D_1
 execute SK_21
 execute SK_21
 execute D_0
 execute D_0
 execute SK_20
 execute SK_20
end sub

sub STOP
 execute SK_20
 execute SK_20
 execute D_0
 execute D_0
 execute SK_21
 execute SK_21
 execute D_1
 execute D_1
end sub

 sub WR(D7,D6,D5,D4,D3,D2,D1,D0)
 execute D7
 execute SK_21
 execute SK_20
 execute D6
 execute SK_21
 execute SK_20
 execute D5
 execute SK_21
 execute SK_20
 execute D4
 execute SK_21
 execute SK_20
 execute D3
 execute SK_21
 execute SK_20
 execute D2
 execute SK_21
 execute SK_20
 execute D1
 execute SK_21
 execute SK_20
 execute D0
 execute SK_21
 execute SK_10
 execute R_0    ! Acknowledge bit
 execute SK_11
 execute SK_10
end sub

sub RN(D7,D6,D5,D4,D3,D2,D1,D0)
 execute SK_11
 execute D7
 execute SK_10
 execute SK_11
 execute D6
 execute SK_10
 execute SK_11
 execute D5
 execute SK_10
 execute SK_11
 execute D4
 execute SK_10
 execute SK_11
 execute D3
 execute SK_10
 execute SK_11
 execute D2
 execute SK_10
 execute SK_11
 execute D1
 execute SK_10
 execute SK_11
 execute D0
 execute SK_10
 execute D_1    ! no Acknowledge bit
 execute SK_21
 execute SK_20
 execute SK_10
end sub

sub WR_NACKED(D7,D6,D5,D4,D3,D2,D1,D0)
 execute D7
 execute SK_21
 execute SK_20
 execute D6
 execute SK_21
 execute SK_20
 execute D5
 execute SK_21
 execute SK_20
 execute D4
 execute SK_21
 execute SK_20
 execute D3
 execute SK_21
 execute SK_20
 execute D2
 execute SK_21
 execute SK_20
 execute D1
 execute SK_21
 execute SK_20
 execute D0
 execute SK_21
 execute SK_10
 execute R_1    ! Nacknowledge bit
 execute SK_11
 execute SK_10
 end sub

sub RD(D7,D6,D5,D4,D3,D2,D1,D0)
 execute SK_11
 execute D7
 execute SK_10
 execute SK_11
 execute D6
 execute SK_10
 execute SK_11
 execute D5
 execute SK_10
 execute SK_11
 execute D4
 execute SK_10
 execute SK_11
 execute D3
 execute SK_10
 execute SK_11
 execute D2
 execute SK_10
 execute SK_11
 execute D1
 execute SK_10
 execute SK_11
 execute D0
 execute SK_10
 execute SK_21
 execute D_0    ! Acknowledge bit
 execute SK_20
 execute SK_10
end sub

sub IC_ADDR(ADD7,ADD6,ADD5,ADD4,ADD3,ADD2,ADD1)
 call STRT
 execute ADD7
 execute SK_21
 execute SK_20
 execute ADD6
 execute SK_21
 execute SK_20
 execute ADD5
 execute SK_21
 execute SK_20
 execute ADD4
 execute SK_21
 execute SK_20
 execute ADD3
 execute SK_21
 execute SK_20
 execute ADD2
 execute SK_21
 execute SK_20
 execute ADD1
 execute SK_21
 execute SK_20
end sub

sub WR_COM
 call IC_ADDR(D_0,D_0,D_0,D_1,D_0,D_1,D_0)
 execute D_0    ! Write operation
 execute SK_21
 execute SK_10
 execute R_0    ! Acknowledge bit
 execute SK_11
 execute SK_10
end sub

sub RD_COM
 call IC_ADDR(D_0,D_0,D_0,D_1,D_0,D_1,D_0)
 execute D_1    ! Read operation
 execute SK_21
 execute SK_10
 execute R_0    ! Acknowledge bit
 execute SK_11
 execute SK_10
end sub

!######################################################

unit "Synchronize I2C Bus"
 repeat 80 times
  execute INIT1
 end repeat
 execute R_1
 call STRT
 call STOP
 call STRT
 call STOP
 call STRT
 call STOP
end unit

unit "BEGIN READ PROCEDURE"
 call WR_COM
 call WR(D_1,D_1,D_1,D_1,D_1,D_1,D_1,D_1) ! xff reg
 call WR(D_0,D_0,D_0,D_0,D_0,D_0,D_0,D_0) ! x00 page0
 call STOP
 call WR_COM
 call WR(D_1,D_0,D_0,D_1,D_0,D_1,D_1,D_0) ! x96
 call WR(D_0,D_0,D_0,D_1,D_0,D_0,D_0,D_1) ! x11 data
 execute D_0
 execute SK_21
 execute SK_20
 execute D_0
 execute SK_21
 execute SK_20
 execute SK_20 drive data Write_Pointer
 execute SK_21
 execute SK_20
 next Write_Pointer
 execute SK_20 drive data Write_Pointer
 execute SK_21
 execute SK_20
 next Write_Pointer
 execute SK_20 drive data Write_Pointer
 execute SK_21
 execute SK_20
 next Write_Pointer
 execute SK_20 drive data Write_Pointer
 execute SK_21
 execute SK_20
 next Write_Pointer
 execute SK_20 drive data Write_Pointer
 execute SK_21
 execute SK_20
 next Write_Pointer
 execute SK_20 drive data Write_Pointer
 execute SK_21
 execute SK_10
 execute R_0    ! Acknowledge bit
 execute SK_11
 execute SK_10
 call STOP
 wait 200m

 call WR_COM
 call WR(D_1,D_0,D_0,D_1,D_0,D_1,D_1,D_1) ! x97 Reg
 call STOP
 call RD_COM
 call RD(R_1,R_X,R_X,R_X,R_X,R_X,R_X,R_X) ! Reg x97[7]=1 (done)
 call STOP
 call WR_COM
 call WR(D_0,D_1,D_1,D_0,D_0,D_0,D_0,D_0) ! x60 Reg
 call STOP
 call RD_COM
 call RD(R_X,R_X,R_0,R_0,R_0,R_X,R_X,R_X) ! No CRC error
 call STOP
end unit

unit "READ CNFG DATA"
 call WR_COM
 call WR(D_1,D_1,D_1,D_1,D_1,D_1,D_1,D_1) ! xFF Reg
 call WR(D_0,D_0,D_0,D_0,D_0,D_0,D_0,D_0) ! Page0
 call STOP
 call WR_COM ! 0000 50 F0
 call WR(D_0,D_0,D_0,D_0,D_0,D_0,D_0,D_0)
 call RD_COM
 call RN(R_0,R_1,R_0,R_1,R_X,R_X,R_X,R_X)
 call STOP
 call WR_COM ! 0001 00 0F
 call WR(D_0,D_0,D_0,D_0,D_0,D_0,D_0,D_1)
 call RD_COM
 call RN(R_X,R_X,R_X,R_X,R_0,R_0,R_0,R_0)
 call STOP
 call WR_COM ! 0002 00 F3
 call WR(D_0,D_0,D_0,D_0,D_0,D_0,D_1,D_0)
 call RD_COM
 call RN(R_0,R_0,R_0,R_0,R_X,R_X,R_0,R_0)
 call STOP
end unit
