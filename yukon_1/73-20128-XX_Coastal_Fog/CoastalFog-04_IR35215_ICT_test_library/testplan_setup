!ir35215

dim IR_USER_CAP_PT_U1_RR(32)
dim IR_USER_PROG_PT_U1_RR(6)
dim IR_USER_VER_PT_U1_RR(6)
dim IR_CONFIG_CAP_PT_U1_RR(5)
dim IR_CONFIG_PROG_PT_U1_RR(6)
dim IR_CONFIG_VER_PT_U1_RR(6)
dim IR_USER_CAP_PT_U1_QA(32)
dim IR_USER_PROG_PT_U1_QA(6)
dim IR_USER_VER_PT_U1_QA(6)
dim IR_CONFIG_CAP_PT_U1_QA(5)
dim IR_CONFIG_PROG_PT_U1_QA(6)
dim IR_CONFIG_VER_PT_U1_QA(6)
dim IR_USER_CAP_PT_U1_Q3V3R(32)
dim IR_USER_PROG_PT_U1_Q3V3R(6)
dim IR_USER_VER_PT_U1_Q3V3R(6)
dim IR_CONFIG_CAP_PT_U1_Q3V3R(5)
dim IR_CONFIG_PROG_PT_U1_Q3V3R(6)
dim IR_CONFIG_VER_PT_U1_Q3V3R(6)

sub Program_ir35215 (Status_Code, Message$)

global IR_USER_CAP_PT_U1_RR(*)
global IR_USER_PROG_PT_U1_RR(*)
global IR_USER_VER_PT_U1_RR(*)
global IR_CONFIG_CAP_PT_U1_RR(*)
global IR_CONFIG_PROG_PT_U1_RR(*)
global IR_CONFIG_VER_PT_U1_RR(*)
global IR_USER_CAP_PT_U1_QA(*)
global IR_USER_PROG_PT_U1_QA(*)
global IR_USER_VER_PT_U1_QA(*)
global IR_CONFIG_CAP_PT_U1_QA(*)
global IR_CONFIG_PROG_PT_U1_QA(*)
global IR_CONFIG_VER_PT_U1_QA(*)
global IR_USER_CAP_PT_U1_Q3V3R(*)
global IR_USER_PROG_PT_U1_Q3V3R(*)
global IR_USER_VER_PT_U1_Q3V3R(*)
global IR_CONFIG_CAP_PT_U1_Q3V3R(*)
global IR_CONFIG_PROG_PT_U1_Q3V3R(*)
global IR_CONFIG_VER_PT_U1_Q3V3R(*)
global Status
safeguard cool

print tab(6); "Programming U1_RR ir35215"
test "digital/u1_rr_user_capture";IR_USER_CAP_PT_U1_RR(*)
call User_Pointer_Calculation (IR_USER_CAP_PT_U1_RR(*),IR_USER_PROG_PT_U1_RR(*),IR_USER_VER_PT_U1_RR(*))
test "digital/u1_rr_user_ver";IR_USER_VER_PT_U1_RR(*)
if dutfailed then
  test "digital/u1_rr_user_prog";IR_USER_PROG_PT_U1_RR(*)
  test "digital/u1_rr_user_ver";IR_USER_PROG_PT_U1_RR(*)
end if

test "digital/u1_rr_config_capture";IR_CONFIG_CAP_PT_U1_RR(*)
call Config_Pointer_Calculation (IR_CONFIG_CAP_PT_U1_RR(*),IR_CONFIG_PROG_PT_U1_RR(*),IR_CONFIG_VER_PT_U1_RR(*))
test "digital/u1_rr_config_ver";IR_CONFIG_VER_PT_U1_RR(*)
if dutfailed then
  test "digital/u1_rr_config_prog";IR_CONFIG_PROG_PT_U1_RR(*)
  test "digital/u1_rr_config_ver";IR_CONFIG_PROG_PT_U1_RR(*)
end if

print tab(6); "Programming U1_QA ir35215"
test "digital/u1_qa_user_capture";IR_USER_CAP_PT_U1_QA(*)
call User_Pointer_Calculation (IR_USER_CAP_PT_U1_QA(*),IR_USER_PROG_PT_U1_QA(*),IR_USER_VER_PT_U1_QA(*))
test "digital/u1_qa_user_ver";IR_USER_VER_PT_U1_QA(*)
if dutfailed then
  test "digital/u1_qa_user_prog";IR_USER_PROG_PT_U1_QA(*)
  test "digital/u1_qa_user_ver";IR_USER_PROG_PT_U1_QA(*)
end if

test "digital/u1_qa_config_capture";IR_CONFIG_CAP_PT_U1_QA(*)
call Config_Pointer_Calculation (IR_CONFIG_CAP_PT_U1_QA(*),IR_CONFIG_PROG_PT_U1_QA(*),IR_CONFIG_VER_PT_U1_QA(*))
test "digital/u1_qa_config_ver";IR_CONFIG_VER_PT_U1_QA(*)
if dutfailed then
  test "digital/u1_qa_config_prog";IR_CONFIG_PROG_PT_U1_QA(*)
  test "digital/u1_qa_config_ver";IR_CONFIG_PROG_PT_U1_QA(*)
end if

print tab(6); "Programming U1_Q3V3R ir35215"
test "digital/u1_q3v3r_user_capture";IR_USER_CAP_PT_U1_Q3V3R(*)
call User_Pointer_Calculation (IR_USER_CAP_PT_U1_Q3V3R(*),IR_USER_PROG_PT_U1_Q3V3R(*),IR_USER_VER_PT_U1_Q3V3R(*))
test "digital/u1_q3v3r_user_ver";IR_USER_VER_PT_U1_Q3V3R(*)
if dutfailed then
  test "digital/u1_q3v3r_user_prog";IR_USER_PROG_PT_U1_Q3V3R(*)
  test "digital/u1_q3v3r_user_ver";IR_USER_PROG_PT_U1_Q3V3R(*)
end if

test "digital/u1_q3v3r_config_capture";IR_CONFIG_CAP_PT_U1_Q3V3R(*)
call Config_Pointer_Calculation (IR_CONFIG_CAP_PT_U1_Q3V3R(*),IR_CONFIG_PROG_PT_U1_Q3V3R(*),IR_CONFIG_VER_PT_U1_Q3V3R(*))
test "digital/u1_q3v3r_config_ver";IR_CONFIG_VER_PT_U1_Q3V3R(*)
if dutfailed then
  test "digital/u1_q3v3r_config_prog";IR_CONFIG_PROG_PT_U1_Q3V3R(*)
  test "digital/u1_q3v3r_config_ver";IR_CONFIG_PROG_PT_U1_Q3V3R(*)
end if

subend

sub Config_Pointer_Calculation (CAP_CONFIG_PT(*),NEW_CONFIG_PT(*),OLD_CONFIG_PT(*))

dim CONF_IR_MOD(5)
dim TEMP_NEW_CONFIG_PT(6)
dim TEMP_OLD_CONFIG_PT(6)
  J=4
for I = 0 to 4
  CONF_IR_MOD(I)=CAP_CONFIG_PT(J)
  J=J-1
next I

for I = 0 to 4
  if CONF_IR_MOD(I)=1 then Image=I
next I

print "Capture Config Image # = ",Image
New_Image=Image+1

if New_Image >4 then !image start from 0 to 4
   fail device
   print"   !!!programming is over the limit!!!"
   stop
end if

for I = 0 to 5
  T_Image=New_Image
  TEMP_NEW_CONFIG_PT(I)=T_Image mod 2
  New_Image=int (T_Image/2)
next I

for I = 0 to 5
  T_Image=Image
  TEMP_OLD_CONFIG_PT(I)=T_Image mod 2
  Image=int (T_Image/2)
next I

J=5
for I=0 to 5
  NEW_CONFIG_PT(I)=TEMP_NEW_CONFIG_PT(J)
  J=J-1
next I
J=5
for I=0 to 5
  OLD_CONFIG_PT(I)=TEMP_OLD_CONFIG_PT(J)
  J=J-1
next I
subend

sub User_Pointer_Calculation (CAP_PT(*),NEW_PT(*),OLD_PT(*))

dim IR_MOD(32)
dim TEMP_OLD_PT(6)
dim TEMP_NEW_PT(6)
  J=7
for I = 0 to 7
  IR_MOD(I)=CAP_PT(J)
  J=J-1
next I

  J=15
for I = 8 to 15
  IR_MOD(I)=CAP_PT(J)
  J=J-1
next I

  J=23
for I = 16 to 23
  IR_MOD(I)=CAP_PT(J)
  J=J-1
next I

  J=31
for I = 24 to 31
  IR_MOD(I)=CAP_PT(J)
  J=J-1
next I

for I = 0 to 31
  if IR_MOD(I)=1 then Image=I
next I

print "Capture User Image # = ",Image
New_Image=Image+1

if New_Image >26 then !image start from 0 to 26
   fail device
   print"   !!!programming is over the limit!!!"
   stop
end if

for I = 0 to 5
  T_Image=New_Image
  TEMP_NEW_PT(I)=T_Image mod 2
  New_Image=int (T_Image/2)
next I

for I = 0 to 5
  T_Image=Image
  TEMP_OLD_PT(I)=T_Image mod 2
  Image=int (T_Image/2)
next I

J=5
for I=0 to 5
  NEW_PT(I)=TEMP_NEW_PT(J)
  J=J-1
next I
J=5
for I=0 to 5
  OLD_PT(I)=TEMP_OLD_PT(J)
  J=J-1
next I
subend

