!!!!    6    0    1 1542678541  V6144                                         
 !!!!    6    0    1 1252915849  V4ef0
!    Function:
!    Revision:
!    Author:

sequential

vector cycle 5000n
receive delay 4950n

assign SRT_CLK_OUT7_P to pins 48
assign SRT_CLK_OUT7_N to pins 47
assign SRT_CLK_OUT6_P to pins 45
assign SRT_CLK_OUT6_N to pins 44
assign SRT_CLK_OUT5_P to pins 42
assign SRT_CLK_OUT5_N to pins 41
assign SRT_CLK_OUT4_P to pins 39
assign SRT_CLK_OUT4_N to pins 38
assign SRT_CLK_OUT3_P to pins 23
assign SRT_CLK_OUT3_N to pins 22
assign SRT_CLK_OUT2_P to pins 20
assign SRT_CLK_OUT2_N to pins 21
assign SRT_CLK_OUT1_P to pins 17
assign SRT_CLK_OUT1_N to pins 16
assign SRT_CLK_OUT0_P to pins 14
assign SRT_CLK_OUT0_N to pins 15
assign GND to pins 49
assign SCL to pins 26
assign SDA to pins 25
assign VDDO_7 to pins 46
assign VDDO_6 to pins 43
assign VDDO_5 to pins 40
assign VDDO_4 to pins 37
assign VDDO_2_3 to pins 19
assign VDDO_0_1 to pins 18
assign VDD_DIG to pins 4
assign VDD_IN to pins 5
assign VDD_PLL2 to pins 27
assign VDD_PLL1 to pins 36
assign GPIO0 to pins 12
assign GPIO1 to pins 24
assign GPIO2 to pins 30
assign GPIO3 to pins 31
assign GPIO4 to pins 32
assign GPIO5 to pins 33
assign PRIREF_P to pins 6
assign PRIREF_N to pins 7
assign SECREF_P to pins 10
assign SECREF_N to pins 11
assign REFSEL to pins 8
assign HW_SW_CTRL to pins 9
assign PD to pins 13
assign LF1 to pins 34
assign LF2 to pins 29
assign CAP_DIG to pins 3
assign CAP_PLL2 to pins 28
assign CAP_PLL1 to pins 35
assign STATUS0 to pins 1
assign STATUS1 to pins 2

inputs PRIREF_P,PRIREF_N,SECREF_P,SECREF_N,REFSEL,HW_SW_CTRL,SCL
outputs SRT_CLK_OUT7_P,SRT_CLK_OUT7_N,SRT_CLK_OUT6_P,SRT_CLK_OUT6_N,SRT_CLK_OUT5_P,SRT_CLK_OUT5_N
outputs SRT_CLK_OUT4_P,SRT_CLK_OUT4_N,SRT_CLK_OUT3_P,SRT_CLK_OUT3_N,SRT_CLK_OUT2_P,SRT_CLK_OUT2_N
outputs SRT_CLK_OUT1_P,SRT_CLK_OUT1_N,SRT_CLK_OUT0_P,SRT_CLK_OUT0_N
power GND,VDDO_7,VDDO_6,VDDO_5,VDDO_4,VDDO_2_3,VDDO_0_1,VDD_DIG,VDD_IN,VDD_PLL2,VDD_PLL1
bidirectional SDA
nondigital PD,LF1,LF2,CAP_DIG,CAP_PLL2,CAP_PLL1,GPIO0,GPIO1,GPIO2,GPIO3,GPIO4,GPIO5,STATUS1,STATUS0

family LVT

set load on groups SDA to pull up

vector INIT1
 drive SDA
 set SDA  to "1"
 set SCL  to "1"
end vector

vector KEEP1
 receive SDA
 set SDA  to "x"
 set SCL  to "k"
end vector

vector KEEP2
 drive SDA
 set SDA  to "k"
 set SCL  to "k"
end vector

vector SCL_10
 initialize to KEEP1
 set SCL    to "0"
end vector

vector SCL_11
 initialize to KEEP1
 set SCL    to "1"
end vector

vector SCL_20
 initialize to KEEP2
 set SCL    to "0"
end vector

vector SCL_21
 initialize to KEEP2
 set SCL    to "1"
end vector

vector RD_X
 initialize to KEEP1
 set SDA    to "x"
end vector

vector RD_0
 initialize to KEEP1
 set SDA    to "0"
end vector

vector RD_1
 initialize to KEEP1
 set SDA    to "1"
end vector

vector WD_0
 initialize to KEEP2
 set SDA    to "0"
end vector

vector WD_1
 initialize to KEEP2
 set SDA    to "1"
end vector

vector Output_high
  set SRT_CLK_OUT7_P to "1"
  set SRT_CLK_OUT7_N to "0"
  set SRT_CLK_OUT6_P to "1"
  set SRT_CLK_OUT6_N to "0"
  set SRT_CLK_OUT5_P to "1"
  set SRT_CLK_OUT5_N to "0"
  set SRT_CLK_OUT4_P to "1"
  set SRT_CLK_OUT4_N to "0"
  set SRT_CLK_OUT3_P to "1"
  set SRT_CLK_OUT3_N to "0"
  set SRT_CLK_OUT2_P to "1"
  set SRT_CLK_OUT2_N to "0"
  set SRT_CLK_OUT1_P to "1"
  set SRT_CLK_OUT1_N to "0"
  set SRT_CLK_OUT0_P to "1"
  set SRT_CLK_OUT0_N to "0"
end vector

vector Output_low
  set SRT_CLK_OUT7_P to "0"
  set SRT_CLK_OUT7_N to "1"
  set SRT_CLK_OUT6_P to "0"
  set SRT_CLK_OUT6_N to "1"
  set SRT_CLK_OUT5_P to "0"
  set SRT_CLK_OUT5_N to "1"
  set SRT_CLK_OUT4_P to "0"
  set SRT_CLK_OUT4_N to "1"
  set SRT_CLK_OUT3_P to "0"
  set SRT_CLK_OUT3_N to "1"
  set SRT_CLK_OUT2_P to "0"
  set SRT_CLK_OUT2_N to "1"
  set SRT_CLK_OUT1_P to "0"
  set SRT_CLK_OUT1_N to "1"
  set SRT_CLK_OUT0_P to "0"
  set SRT_CLK_OUT0_N to "1"
end vector

vector Clock_input_pri_high  !select pri ??
  set HW_SW_CTRL to "1"
  set PRIREF_P to  "1"
  set PRIREF_N to  "0"
end vector

vector Clock_input_sec_high  !select sec clock source
  set  HW_SW_CTRL to "0"
  set SECREF_P to "1"
  set SECREF_N to "0"
end vector

vector Clock_input_pri_low  !select pri ??
  set HW_SW_CTRL to "1"
  set PRIREF_P to  "0"
  set PRIREF_N to  "1"
end vector

vector Clock_input_sec_low  !select sec clock source
  set  HW_SW_CTRL to "0"
  set SECREF_P to "0"
  set SECREF_N to "1"
end vector


! ***********************************************************************

sub STRT
 execute WD_0
 execute SCL_20
end sub

sub STOP
 execute WD_0
 execute SCL_21
 execute WD_1
 repeat 20 times
  execute SCL_21
 end repeat
end sub

sub R_0
 execute RD_0
 execute SCL_11
 execute SCL_10
end sub
sub R_0_D
 execute RD_1
 execute SCL_11
 execute SCL_10
end sub
sub R_1
 execute RD_1
 execute SCL_11
 execute SCL_10
end sub

sub D_0
 execute WD_0
 execute SCL_21
 execute SCL_10
end sub

sub D_1
 execute WD_1
 execute SCL_21
 execute SCL_10
end sub

sub IC_ADDR
 call D_0    ! Address bit A2, Change to match pin A2 if tied
 call D_0    ! Address bit A1, Change to match pin A1 if tied
 call D_0    ! Address bit A0, Change to match pin A0 if tied
end sub

sub WR_CMD
 call STRT
 call D_1
 call D_0
 call D_0
 call D_1
 call IC_ADDR
 call D_0      ! Write
 call R_0
end sub

sub RD_CMD
 call STRT
 call D_1
 call D_0
 call D_0
 call D_1
 call IC_ADDR
 call D_1      ! Read
 call R_0
end sub

sub WR(D7,D6,D5,D4,D3,D2,D1,D0)
 execute D7
 execute SCL_21
 execute SCL_20
 execute D6
 execute SCL_21
 execute SCL_20
 execute D5
 execute SCL_21
 execute SCL_20
 execute D4
 execute SCL_21
 execute SCL_20
 execute D3
 execute SCL_21
 execute SCL_20
 execute D2
 execute SCL_21
 execute SCL_20
 execute D1
 execute SCL_21
 execute SCL_20
 execute D0
 execute SCL_21
 execute SCL_20
 execute SCL_10
 execute RD_0  ! Acknowledge bit
 execute SCL_11
 execute SCL_10
end sub

sub RD(D7,D6,D5,D4,D3,D2,D1,D0)
 execute SCL_11
 execute D7
 execute SCL_10
 execute SCL_11
 execute D6
 execute SCL_10
 execute SCL_11
 execute D5
 execute SCL_10
 execute SCL_11
 execute D4
 execute SCL_10
 execute SCL_11
 execute D3
 execute SCL_10
 execute SCL_11
 execute D2
 execute SCL_10
 execute SCL_11
 execute D1
 execute SCL_10
 execute SCL_11
 execute D0
 execute SCL_10
 execute WD_0  ! Acknowledge bit
 execute SCL_21
 execute SCL_20
 execute SCL_10
end sub

! ***********************************************************************

unit "Initialize I2C Bus"
 execute INIT1
 repeat 40 times
  execute SCL_21
 end repeat
 execute RD_1
end unit


! ************************ Testing Address Bits *************************

 unit "A = 10"
  execute RD_1
  call STRT
  call D_1
  call D_1
  call D_0
  call D_1
  call D_1  ! Address bits match
  call D_0
  call D_0
  call D_0
  call R_0  ! Acknowlege bit active
  call STOP
 end unit

unit "A = 10_Dis"
 execute RD_1
 call STRT
 call D_1
 call D_1
 call D_0
 call D_1
 call D_1  ! Address bits match
 call D_1
 call D_0
 call D_1
 call R_0_D  ! Acknowlege bit active
 call STOP
end unit

unit "CLOCK_HIGH_PRI"
   execute Clock_input_pri_high
   execute Output_high

end unit

unit "CLOCK_LOW_PRI"
  execute Clock_input_pri_low
  execute Output_low

end unit
unit "CLOCK_HIGH_SEC"
   execute Clock_input_sec_high
   execute Output_high

end unit

unit "CLOCK_LOW_SEC"
  execute Clock_input_sec_low
  execute Output_low

end unit

